/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package internalversion

import (
	petstore "github.com/vaibhavk/petstore-apiserver/pkg/apis/petstore"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PetStoreLister helps list PetStores.
// All objects returned here must be treated as read-only.
type PetStoreLister interface {
	// List lists all PetStores in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*petstore.PetStore, err error)
	// PetStores returns an object that can list and get PetStores.
	PetStores(namespace string) PetStoreNamespaceLister
	PetStoreListerExpansion
}

// petStoreLister implements the PetStoreLister interface.
type petStoreLister struct {
	indexer cache.Indexer
}

// NewPetStoreLister returns a new PetStoreLister.
func NewPetStoreLister(indexer cache.Indexer) PetStoreLister {
	return &petStoreLister{indexer: indexer}
}

// List lists all PetStores in the indexer.
func (s *petStoreLister) List(selector labels.Selector) (ret []*petstore.PetStore, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*petstore.PetStore))
	})
	return ret, err
}

// PetStores returns an object that can list and get PetStores.
func (s *petStoreLister) PetStores(namespace string) PetStoreNamespaceLister {
	return petStoreNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PetStoreNamespaceLister helps list and get PetStores.
// All objects returned here must be treated as read-only.
type PetStoreNamespaceLister interface {
	// List lists all PetStores in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*petstore.PetStore, err error)
	// Get retrieves the PetStore from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*petstore.PetStore, error)
	PetStoreNamespaceListerExpansion
}

// petStoreNamespaceLister implements the PetStoreNamespaceLister
// interface.
type petStoreNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PetStores in the indexer for a given namespace.
func (s petStoreNamespaceLister) List(selector labels.Selector) (ret []*petstore.PetStore, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*petstore.PetStore))
	})
	return ret, err
}

// Get retrieves the PetStore from the indexer for a given namespace and name.
func (s petStoreNamespaceLister) Get(name string) (*petstore.PetStore, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(petstore.Resource("petstore"), name)
	}
	return obj.(*petstore.PetStore), nil
}
